[
  {
    "id": "snippet-1",
    "title": "Ligar Pontos",
    "description": "Exemplo simples de ligar pontos com canvas.",
    "code": "<div class=\"ligacao-pag18\">\n  <svg class=\"svg-ligacoes\"></svg>\n  <!-- Coluna da esquerda: encontros consonantais -->\n  <div class=\"coluna esquerda\">\n    <div class=\"item\" data-lado=\"esquerda\" data-id=\"e1\">cr</div>\n    <div class=\"item\" data-lado=\"esquerda\" data-id=\"e2\">pl</div>\n    <div class=\"item\" data-lado=\"esquerda\" data-id=\"e3\">br</div>\n    <div class=\"item\" data-lado=\"esquerda\" data-id=\"e4\">tr</div>\n    <div class=\"item\" data-lado=\"esquerda\" data-id=\"e5\">gr</div>\n  </div>\n\n  <!-- Coluna da direita: palavras -->\n  <div class=\"coluna direita\">\n    <div class=\"item\" data-lado=\"direita\" data-id=\"d1\">pleno</div>\n    <div class=\"item\" data-lado=\"direita\" data-id=\"d2\">trabalho</div>\n    <div class=\"item\" data-lado=\"direita\" data-id=\"d3\">brinde</div>\n    <div class=\"item\" data-lado=\"direita\" data-id=\"d4\">grampo</div>\n    <div class=\"item\" data-lado=\"direita\" data-id=\"d5\">creme</div>\n  </div>\n</div>\n\n<!-- ✅ ESTILO -->\n<style>\n  .ligacao-pag18 {\n    display: flex;\n    justify-content: center;\n    position: relative;\n    margin: 40px auto;\n    max-width: 900px;\n    gap: 100px;\n    min-height: 400px;\n  }\n\n  .ligacao-pag18 .coluna {\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    z-index: 2;\n  }\n\n  .ligacao-pag18 .esquerda {\n    align-items: flex-end;\n  }\n\n  .ligacao-pag18 .direita {\n    align-items: flex-start;\n  }\n\n  .ligacao-pag18 .item {\n    background-color: white;\n    border-radius: 6px;\n    padding: 12px 16px;\n    min-width: 150px;\n    text-align: center;\n    cursor: pointer;\n    border: 2px solid #89c59b;\n    transition: 0.3s;\n    font-size: 16px;\n  }\n\n  .ligacao-pag18 .direita .item {\n    border-color: #8b8fb0;\n  }\n\n  .ligacao-pag18 .item:hover {\n    background-color: #f0f8ff;\n  }\n\n  .ligacao-pag18 .item.selecionado {\n    outline: 3px solid #007bff;\n    background-color: #eef6ff;\n  }\n\n  .svg-ligacoes {\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n  }\n</style>\n\n<!-- ✅ FUNCIONALIDADE -->\n<script>\n  (function () {\n    const container = document.querySelector(\".ligacao-pag18\");\n    const svg = container.querySelector(\".svg-ligacoes\");\n    const itens = container.querySelectorAll(\".item\");\n\n    let selecionado = null;\n    const ligacoes = {};\n    const cores = [\"#4a81c4\", \"#28a745\", \"#ff9800\", \"#8000ba\", \"#f44336\"];\n\n    function getCenter(el) {\n      const rect = el.getBoundingClientRect();\n      const parentRect = container.getBoundingClientRect();\n      return {\n        x: rect.left + rect.width / 2 - parentRect.left,\n        y: rect.top + rect.height / 2 - parentRect.top,\n      };\n    }\n\n    function desenharLinha(origem, destino, idOrigem, idDestino, cor) {\n      const p1 = getCenter(origem);\n      const p2 = getCenter(destino);\n      const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n      line.setAttribute(\"x1\", p1.x);\n      line.setAttribute(\"y1\", p1.y);\n      line.setAttribute(\"x2\", p2.x);\n      line.setAttribute(\"y2\", p2.y);\n      line.setAttribute(\"stroke\", cor);\n      line.setAttribute(\"stroke-width\", 2.5);\n      line.setAttribute(\"data-ligacao\", `${idOrigem}-${idDestino}`);\n      svg.appendChild(line);\n    }\n\n    function removerLinha(idOrigem, idDestino) {\n      const linha = svg.querySelector(`line[data-ligacao=\"${idOrigem}-${idDestino}\"]`);\n      if (linha) linha.remove();\n    }\n\n    itens.forEach(item => {\n      item.addEventListener(\"click\", () => {\n        if (!selecionado) {\n          selecionado = item;\n          item.classList.add(\"selecionado\");\n        } else {\n          if (selecionado.dataset.lado !== item.dataset.lado) {\n            const origem = selecionado.dataset.lado === \"esquerda\" ? selecionado : item;\n            const destino = selecionado.dataset.lado === \"direita\" ? selecionado : item;\n\n            const idO = origem.dataset.id;\n            const idD = destino.dataset.id;\n\n            for (let k in ligacoes) {\n              if (ligacoes[k] === idD || k === idO) {\n                removerLinha(k, ligacoes[k]);\n                delete ligacoes[k];\n              }\n            }\n\n            const cor = cores[Object.keys(ligacoes).length % cores.length];\n            ligacoes[idO] = idD;\n            desenharLinha(origem, destino, idO, idD, cor);\n          }\n\n          selecionado.classList.remove(\"selecionado\");\n          selecionado = null;\n        }\n      });\n    });\n\n    window.addEventListener(\"resize\", () => {\n      svg.innerHTML = \"\";\n      for (const origemId in ligacoes) {\n        const destinoId = ligacoes[origemId];\n        const origem = container.querySelector(`.item[data-id=\"${origemId}\"]`);\n        const destino = container.querySelector(`.item[data-id=\"${destinoId}\"]`);\n        const cor = cores[Object.keys(ligacoes).indexOf(origemId) % cores.length];\n        desenharLinha(origem, destino, origemId, destinoId, cor);\n      }\n    });\n  })();\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/ligar_pontos.png",
    "tags": [
      "ligar pontos",
      "jogo"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-2",
    "title": "Selecionar e colorir",
    "description": "Exemplo simples de selecionar e colorir palavras.",
    "code": "<!-- Legenda com ícones -->\n<div class=\"legend\">\n  <div class=\"seletor\" data-color=\"#1cb05c\">\n    <img src=\"resources/image/13_4.png\" alt=\"Estudar\" />\n    <span>Estudar</span>\n  </div>\n  <div class=\"seletor\" data-color=\"#2b9fc9\">\n    <img src=\"resources/image/13_5.png\" alt=\"Revisar\" />\n    <span>Revisar</span>\n  </div>\n  <div class=\"seletor\" data-color=\"#f4d248\">\n    <img src=\"resources/image/13_2.png\" alt=\"Descansar\" />\n    <span>Descansar</span>\n  </div>\n</div>\n\n<!-- Dias da semana -->\n<div class=\"semana\">\n  <div class=\"dia\" data-dia=\"segunda\">Segunda</div>\n  <div class=\"dia\" data-dia=\"terca\">Terça</div>\n  <div class=\"dia\" data-dia=\"quarta\">Quarta</div>\n  <div class=\"dia\" data-dia=\"quinta\">Quinta</div>\n  <div class=\"dia\" data-dia=\"sexta\">Sexta</div>\n  <div class=\"dia\" data-dia=\"sabado\">Sábado</div>\n  <div class=\"dia\" data-dia=\"domingo\">Domingo</div>\n</div>\n\n<!-- ✅ ESTILO -->\n<style>\n  .pag9-planejamento {\n    max-width: 850px;\n    margin: 40px auto;\n    font-family: Arial, sans-serif;\n    text-align: center;\n    padding: 0 20px;\n  }\n\n  .titulo {\n    background-color: #3953a4;\n    color: white;\n    padding: 12px;\n    border-radius: 10px;\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n\n  .instrucoes-pag9 {\n    background-color: #f4f8fc;\n    border-left: 5px solid #4a81c4;\n    padding: 15px 25px;\n    margin-bottom: 30px;\n    border-radius: 8px;\n    text-align: left;\n    font-size: 14px;\n    color: #333;\n  }\n\n  .instrucoes-pag9 ul {\n    margin-top: 10px;\n    padding-left: 20px;\n  }\n\n  .instrucoes-pag9 li {\n    margin-bottom: 10px;\n    line-height: 1.5;\n  }\n\n  .legend {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n    margin-bottom: 25px;\n    flex-wrap: wrap;\n  }\n\n  .seletor {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background-color: #eef1f4;\n    padding: 10px 18px;\n    border-radius: 8px;\n    cursor: pointer;\n    border: 2px solid transparent;\n    transition: transform 0.2s, border 0.2s;\n  }\n\n  .seletor img {\n    width: 32px;\n    height: 32px;\n  }\n\n  .seletor span {\n    font-weight: bold;\n    font-size: 14px;\n  }\n\n  .seletor.active {\n    border: 2px solid #333;\n    transform: scale(1.05);\n    background-color: #dcefff;\n  }\n\n  .semana {\n    display: flex;\n    justify-content: center;\n    gap: 12px;\n    flex-wrap: wrap;\n    margin-bottom: 30px;\n  }\n\n  .dia {\n    width: 100px;\n    height: 80px;\n    border: 2px solid #ccc;\n    border-radius: 10px;\n    padding: 8px;\n    box-sizing: border-box;\n    font-weight: bold;\n    font-size: 13px;\n    background-color: white;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    line-height: 1.3;\n    cursor: pointer;\n    transition: background-color 0.3s, border-color 0.2s;\n  }\n\n  .dia.colored {\n    color: white;\n    border-color: #333;\n  }\n\n  .postit {\n    margin-top: 30px;\n    text-align: left;\n  }\n\n  .postit textarea {\n    width: 100%;\n    height: 100px;\n    resize: vertical;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    padding: 10px;\n    font-size: 14px;\n  }\n\n  .postit label {\n    font-size: 14px;\n    color: #333;\n  }\n</style>\n\n<!-- ✅ SCRIPT FUNCIONAL -->\n<script>\n  (function () {\n    const botoes = document.querySelectorAll(\".seletor\");\n    const dias = document.querySelectorAll(\".dia\");\n    let corSelecionada = null;\n\n    botoes.forEach(btn => {\n      btn.addEventListener(\"click\", () => {\n        botoes.forEach(b => b.classList.remove(\"active\"));\n        btn.classList.add(\"active\");\n        corSelecionada = btn.getAttribute(\"data-color\");\n      });\n    });\n\n    dias.forEach(dia => {\n      dia.addEventListener(\"click\", () => {\n        if (!corSelecionada) return;\n\n        dia.style.backgroundColor = corSelecionada;\n        dia.classList.add(\"colored\");\n      });\n    });\n  })();\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/selecionar_colorir.png",
    "tags": [
      "selecionar",
      "jogo",
      "colorir"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-4",
    "title": "Circular letras",
    "description": "Exemplo simples de circular letras.",
    "code": "<div\n  style=\"display: flex; justify-content: space-around; margin: 1em 0; font-size: 1em; flex-wrap: wrap; gap: 1em;\">\n  <!-- Primeira linha: Crie, Mesmo, Tentar -->\n  <div class=\"palavra-circulo\"\n    style=\"background-color: #e2f1e6; padding: 0.5em 1em; border-radius: 8px; text-align: center;\">\n    <span class=\"letra\" data-palavra=\"crie\" data-posicao=\"0\" onclick=\"circularLetra(this)\">c</span>\n    <span class=\"letra\" data-palavra=\"crie\" data-posicao=\"1\" onclick=\"circularLetra(this)\">r</span>\n    <span class=\"letra\" data-palavra=\"crie\" data-posicao=\"2\" onclick=\"circularLetra(this)\">i</span>\n    <span class=\"letra\" data-palavra=\"crie\" data-posicao=\"3\" onclick=\"circularLetra(this)\">e</span>\n  </div>\n  <div class=\"palavra-circulo\"\n    style=\"background-color: #e2f1e6; padding: 0.5em 1em; border-radius: 8px; text-align: center;\">\n    <span class=\"letra\" data-palavra=\"mesmo\" data-posicao=\"0\" onclick=\"circularLetra(this)\">m</span>\n    <span class=\"letra\" data-palavra=\"mesmo\" data-posicao=\"1\" onclick=\"circularLetra(this)\">e</span>\n    <span class=\"letra\" data-palavra=\"mesmo\" data-posicao=\"2\" onclick=\"circularLetra(this)\">s</span>\n    <span class=\"letra\" data-palavra=\"mesmo\" data-posicao=\"3\" onclick=\"circularLetra(this)\">m</span>\n    <span class=\"letra\" data-palavra=\"mesmo\" data-posicao=\"4\" onclick=\"circularLetra(this)\">o</span>\n  </div>\n  <div class=\"palavra-circulo\"\n    style=\"background-color: #e2f1e6; padding: 0.5em 1em; border-radius: 8px; text-align: center;\">\n    <span class=\"letra\" data-palavra=\"tentar\" data-posicao=\"0\" onclick=\"circularLetra(this)\">t</span>\n    <span class=\"letra\" data-palavra=\"tentar\" data-posicao=\"1\" onclick=\"circularLetra(this)\">e</span>\n    <span class=\"letra\" data-palavra=\"tentar\" data-posicao=\"2\" onclick=\"circularLetra(this)\">n</span>\n    <span class=\"letra\" data-palavra=\"tentar\" data-posicao=\"3\" onclick=\"circularLetra(this)\">t</span>\n    <span class=\"letra\" data-palavra=\"tentar\" data-posicao=\"4\" onclick=\"circularLetra(this)\">a</span>\n    <span class=\"letra\" data-palavra=\"tentar\" data-posicao=\"5\" onclick=\"circularLetra(this)\">r</span>\n  </div>\n\n  <!-- Segunda linha: Estudos, Adianta, Estudar -->\n  <div class=\"palavra-circulo\"\n    style=\"background-color: #e2f1e6; padding: 0.5em 1em; border-radius: 8px; text-align: center;\">\n    <span class=\"letra\" data-palavra=\"estudos\" data-posicao=\"0\" onclick=\"circularLetra(this)\">e</span>\n    <span class=\"letra\" data-palavra=\"estudos\" data-posicao=\"1\" onclick=\"circularLetra(this)\">s</span>\n    <span class=\"letra\" data-palavra=\"estudos\" data-posicao=\"2\" onclick=\"circularLetra(this)\">t</span>\n    <span class=\"letra\" data-palavra=\"estudos\" data-posicao=\"3\" onclick=\"circularLetra(this)\">u</span>\n    <span class=\"letra\" data-palavra=\"estudos\" data-posicao=\"4\" onclick=\"circularLetra(this)\">d</span>\n    <span class=\"letra\" data-palavra=\"estudos\" data-posicao=\"5\" onclick=\"circularLetra(this)\">o</span>\n    <span class=\"letra\" data-palavra=\"estudos\" data-posicao=\"6\" onclick=\"circularLetra(this)\">s</span>\n  </div>\n  <div class=\"palavra-circulo\"\n    style=\"background-color: #e2f1e6; padding: 0.5em 1em; border-radius: 8px; text-align: center;\">\n    <span class=\"letra\" data-palavra=\"adianta\" data-posicao=\"0\" onclick=\"circularLetra(this)\">a</span>\n    <span class=\"letra\" data-palavra=\"adianta\" data-posicao=\"1\" onclick=\"circularLetra(this)\">d</span>\n    <span class=\"letra\" data-palavra=\"adianta\" data-posicao=\"2\" onclick=\"circularLetra(this)\">i</span>\n    <span class=\"letra\" data-palavra=\"adianta\" data-posicao=\"3\" onclick=\"circularLetra(this)\">a</span>\n    <span class=\"letra\" data-palavra=\"adianta\" data-posicao=\"4\" onclick=\"circularLetra(this)\">n</span>\n    <span class=\"letra\" data-palavra=\"adianta\" data-posicao=\"5\" onclick=\"circularLetra(this)\">t</span>\n    <span class=\"letra\" data-palavra=\"adianta\" data-posicao=\"6\" onclick=\"circularLetra(this)\">a</span>\n  </div>\n  <div class=\"palavra-circulo\"\n    style=\"background-color: #e2f1e6; padding: 0.5em 1em; border-radius: 8px; text-align: center;\">\n    <span class=\"letra\" data-palavra=\"estudar\" data-posicao=\"0\" onclick=\"circularLetra(this)\">e</span>\n    <span class=\"letra\" data-palavra=\"estudar\" data-posicao=\"1\" onclick=\"circularLetra(this)\">s</span>\n    <span class=\"letra\" data-palavra=\"estudar\" data-posicao=\"2\" onclick=\"circularLetra(this)\">t</span>\n    <span class=\"letra\" data-palavra=\"estudar\" data-posicao=\"3\" onclick=\"circularLetra(this)\">u</span>\n    <span class=\"letra\" data-palavra=\"estudar\" data-posicao=\"4\" onclick=\"circularLetra(this)\">d</span>\n    <span class=\"letra\" data-palavra=\"estudar\" data-posicao=\"5\" onclick=\"circularLetra(this)\">a</span>\n    <span class=\"letra\" data-palavra=\"estudar\" data-posicao=\"6\" onclick=\"circularLetra(this)\">r</span>\n  </div>\n</div>\n\n<style>.palavra-contornavel {\n  cursor: pointer;\n  padding: 0 2px;\n  transition: all 0.2s ease;\n  position: relative;\n  display: inline-block;\n}\n\n.palavra-contornavel:hover {\n  background-color: rgba(36, 185, 241, 0.1);\n}\n\n.palavra-contornavel.contornado {\n  /* Apenas a linha azul abaixo, sem alterar o texto */\n}\n\n.palavra-contornavel.contornado::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background-color: #24b9f1;\n  border-radius: 1px;\n}\n\n.letra {\n  cursor: pointer;\n  padding: 2px 4px;\n  margin: 0 1px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  display: inline-block;\n  position: relative;\n  font-weight: normal;\n  font-size: 1em;\n}\n\n.letra:hover {\n  background-color: rgba(36, 185, 241, 0.2);\n  transform: scale(1.1);\n}\n\n.letra.circulada {\n  background-color: rgba(36, 185, 241, 0.3);\n  color: #24b9f1;\n  box-shadow: 0 0 0 2px #24b9f1;\n}\n\n.letra.circulada::before {\n  content: '';\n  position: absolute;\n  top: -4px;\n  left: -4px;\n  right: -4px;\n  bottom: -4px;\n  border: 2px solid #24b9f1;\n  border-radius: 50%;\n  animation: pulse-circulo 2s infinite;\n}\n\n@keyframes pulse-circulo {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  50% {\n    opacity: 0.7;\n    transform: scale(1.05);\n  }\n\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.palavra-circulo {\n  transition: all 0.3s ease;\n}\n\n.palavra-circulo:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}</style>",
    "category_id": "games",
    "thumbnail_url": "images/circular_letras.png",
    "tags": [
      "selecionar",
      "jogo",
      "circular"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-5",
    "title": "Selecionar",
    "description": "Exemplo simples de seleção.",
    "code": "<div class=\"lista-palavras-bingo\"\n  style=\"display: flex; justify-content: space-around; text-align: center; margin: 1em 0; background-color: #fff6d3; padding: 1em; border-radius: 8px; flex-wrap: wrap; gap: 0.5em;\">\n  <div class=\"palavra-bingo\" data-palavra=\"prato\" onclick=\"selecionarPalavraBingo(this)\">prato</div>\n  <div class=\"palavra-bingo\" data-palavra=\"vidro\" onclick=\"selecionarPalavraBingo(this)\">vidro</div>\n  <div class=\"palavra-bingo\" data-palavra=\"atleta\" onclick=\"selecionarPalavraBingo(this)\">atleta</div>\n  <div class=\"palavra-bingo\" data-palavra=\"fraco\" onclick=\"selecionarPalavraBingo(this)\">fraco</div>\n  <div class=\"palavra-bingo\" data-palavra=\"globo\" onclick=\"selecionarPalavraBingo(this)\">globo</div>\n  <div class=\"palavra-bingo\" data-palavra=\"claro\" onclick=\"selecionarPalavraBingo(this)\">claro</div>\n  <div class=\"palavra-bingo\" data-palavra=\"admitir\" onclick=\"selecionarPalavraBingo(this)\">admitir</div>\n  <div class=\"palavra-bingo\" data-palavra=\"ritmo\" onclick=\"selecionarPalavraBingo(this)\">ritmo</div>\n  <div class=\"palavra-bingo\" data-palavra=\"flor\" onclick=\"selecionarPalavraBingo(this)\">flor</div>\n  <div class=\"palavra-bingo\" data-palavra=\"braço\" onclick=\"selecionarPalavraBingo(this)\">braço</div>\n  <div class=\"palavra-bingo\" data-palavra=\"livro\" onclick=\"selecionarPalavraBingo(this)\">livro</div>\n  <div class=\"palavra-bingo\" data-palavra=\"digno\" onclick=\"selecionarPalavraBingo(this)\">digno</div>\n  <div class=\"palavra-bingo\" data-palavra=\"planta\" onclick=\"selecionarPalavraBingo(this)\">planta</div>\n  <div class=\"palavra-bingo\" data-palavra=\"brinquedo\" onclick=\"selecionarPalavraBingo(this)\">brinquedo</div>\n  <div class=\"palavra-bingo\" data-palavra=\"creme\" onclick=\"selecionarPalavraBingo(this)\">creme</div>\n  <div class=\"palavra-bingo\" data-palavra=\"sombra\" onclick=\"selecionarPalavraBingo(this)\">sombra</div>\n  <div class=\"palavra-bingo\" data-palavra=\"drama\" onclick=\"selecionarPalavraBingo(this)\">drama</div>\n  <div class=\"palavra-bingo\" data-palavra=\"floresta\" onclick=\"selecionarPalavraBingo(this)\">floresta</div>\n  <div class=\"palavra-bingo\" data-palavra=\"frasco\" onclick=\"selecionarPalavraBingo(this)\">frasco</div>\n  <div class=\"palavra-bingo\" data-palavra=\"grampo\" onclick=\"selecionarPalavraBingo(this)\">grampo</div>\n  <div class=\"palavra-bingo\" data-palavra=\"gruta\" onclick=\"selecionarPalavraBingo(this)\">gruta</div>\n  <div class=\"palavra-bingo\" data-palavra=\"plural\" onclick=\"selecionarPalavraBingo(this)\">plural</div>\n  <div class=\"palavra-bingo\" data-palavra=\"tronco\" onclick=\"selecionarPalavraBingo(this)\">tronco</div>\n  <div class=\"palavra-bingo\" data-palavra=\"prancha\" onclick=\"selecionarPalavraBingo(this)\">prancha</div>\n  <div class=\"palavra-bingo\" data-palavra=\"prateleira\" onclick=\"selecionarPalavraBingo(this)\">prateleira</div>\n  <div class=\"palavra-bingo\" data-palavra=\"mistério\" onclick=\"selecionarPalavraBingo(this)\">mistério</div>\n  <div class=\"palavra-bingo\" data-palavra=\"flauta\" onclick=\"selecionarPalavraBingo(this)\">flauta</div>\n  <div class=\"palavra-bingo\" data-palavra=\"martelo\" onclick=\"selecionarPalavraBingo(this)\">martelo</div>\n  <div class=\"palavra-bingo\" data-palavra=\"glossário\" onclick=\"selecionarPalavraBingo(this)\">glossário</div>\n</div>\n\n<style>\n/* Estilos para o Bingo */\n.palavra-bingo {\n  cursor: pointer;\n  padding: 0.5em 1em;\n  background-color: #fff;\n  border: 2px solid #ddd;\n  border-radius: 5px;\n  transition: all 0.3s ease;\n  font-weight: bold;\n}\n\n.palavra-bingo:hover {\n  background-color: #e3f2fd;\n  border-color: #2196f3;\n  transform: scale(1.05);\n}\n\n.palavra-bingo.selecionada {\n  background-color: #4caf50;\n  color: white;\n  border-color: #2e7d32;\n  box-shadow: 0 2px 8px rgba(76, 175, 80, 0.3);\n}\n\n.celula-bingo {\n  background-color: #f8f9fa;\n  border: 2px solid #dee2e6;\n  border-radius: 8px;\n  padding: 20px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  min-height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1em;\n  color: #6c757d;\n}\n\n.celula-bingo:hover {\n  background-color: #e9ecef;\n  border-color: #adb5bd;\n}\n\n.celula-bingo.com-palavra {\n  background-color: #fff;\n  border-color: #364ea2;\n  color: #364ea2;\n  font-weight: bold;\n}\n\n.celula-bingo.marcada {\n  background-color: #28a745;\n  color: white;\n  border-color: #1e7e34;\n  font-size: 1em;\n  font-weight: bold;\n}\n\n.celula-bingo.marcada::after {\n  content: 'X';\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-left: 8px;\n}\n</style>",
    "category_id": "games",
    "thumbnail_url": "images/selecionar.png",
    "tags": [
      "selecionar",
      "jogo"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-6",
    "title": "Arrastar e soltar",
    "description": "Exemplo simples de arrasta e solta.",
    "code": "<div id=\"banco\" class=\"banco-imagens\">\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_1.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img1\"><span>SOFÁ</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_2.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img2\"><span>LIVRO</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_3.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img3\"><span>CAFÉ</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_4.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img4\"><span>ÁRVORE</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_5.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img5\"><span>PINCEL</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_6.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img6\"><span>PÁSSARO</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_7.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img7\"><span>LÂMPADA</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_8.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img8\"><span>RELÓGIO</span></div>\n  <div class=\"img-wrapper\"><img src=\"resources/image/22_9.jpeg\" draggable=\"true\" class=\"img-item\" id=\"img9\"><span>TELEFONE</span></div>\n</div>\n\n<div class=\"quadros\">\n  <div class=\"quadro\" data-id=\"q1\" data-tipo=\"oxitona\">\n    <span class=\"palavra\"></span>\n    <em>OXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q2\" data-tipo=\"paroxitona\">\n    <span class=\"palavra\"></span>\n    <em>PAROXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q3\" data-tipo=\"proparoxitona\">\n    <span class=\"palavra\"></span>\n    <em>PROPAROXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q4\" data-tipo=\"proparoxitona\">\n    <span class=\"palavra\"></span>\n    <em>PROPAROXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q5\" data-tipo=\"oxitona\">\n    <span class=\"palavra\"></span>\n    <em>OXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q6\" data-tipo=\"paroxitona\">\n    <span class=\"palavra\"></span>\n    <em>PAROXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q7\" data-tipo=\"proparoxitona\">\n    <span class=\"palavra\"></span>\n    <em>PROPAROXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q8\" data-tipo=\"oxitona\">\n    <span class=\"palavra\"></span>\n    <em>OXÍTONA</em>\n  </div>\n  <div class=\"quadro\" data-id=\"q9\" data-tipo=\"paroxitona\">\n    <span class=\"palavra\"></span>\n    <em>PAROXÍTONA</em>\n  </div>\n</div>\n\n<style>\n  .banco-imagens {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 14px;\n    justify-content: center;\n    margin-bottom: 30px;\n    border: 2px dashed #ccc;\n    padding: 18px;\n    border-radius: 10px;\n    background: #f9f9f9;\n  }\n\n  .img-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100px;\n  }\n\n  .img-wrapper span {\n    font-size: 12px;\n    margin-top: 4px;\n    text-align: center;\n    color: #333;\n  }\n\n  .img-item {\n    width: 90px;\n    height: 90px;\n    object-fit: contain;\n    border: 2px solid #ccc;\n    border-radius: 8px;\n    cursor: grab;\n    background: white;\n  }\n\n  .escondido {\n    display: none !important;\n  }\n\n  .img-wrapper.escondido {\n    display: none !important;\n  }\n\n  .quadros {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 25px;\n    justify-items: center;\n    text-align: center;\n    padding: 0 20px;\n  }\n\n  .quadro {\n    width: 200px;\n    height: 200px;\n    border: 3px solid #ccc;\n    position: relative;\n    border-radius: 10px;\n    background: #ffffff;\n    padding: 8px;\n    box-sizing: border-box;\n    font-weight: bold;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n    cursor: pointer;\n  }\n\n  .quadro::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n  }\n\n  /* Cores por tipo */\n  .quadro[data-tipo=\"oxitona\"] {\n    border-color: #4CAF50;\n    color: #388E3C;\n  }\n\n  .quadro[data-tipo=\"paroxitona\"] {\n    border-color: #FF9800;\n    color: #EF6C00;\n  }\n\n  .quadro[data-tipo=\"proparoxitona\"] {\n    border-color: #3F51B5;\n    color: #2c387e;\n  }\n\n  .quadro img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    border-radius: 10px;\n    z-index: 1;\n  }\n\n  .quadro span.palavra {\n    z-index: 2;\n    background: white;\n    padding: 4px 6px;\n    font-size: 14px;\n  }\n\n  .quadro em {\n    display: block;\n    font-size: 12px;\n    font-style: italic;\n    z-index: 2;\n    background: white;\n    padding: 2px 4px;\n    margin-top: 4px;\n  }\n\n  .quadro.drop-hover {\n    background-color: #eef7ff;\n  }\n</style>\n\n<script>\n  (function () {\n    const banco = document.getElementById(\"banco\");\n    const imagens = document.querySelectorAll(\".img-item\");\n    const quadros = document.querySelectorAll(\".quadro\");\n\n    imagens.forEach(img => {\n      img.addEventListener(\"dragstart\", (e) => {\n        e.dataTransfer.setData(\"id\", img.id);\n      });\n\n      img.addEventListener(\"click\", () => {\n        const parent = img.parentElement;\n        if (parent.classList.contains(\"quadro\")) {\n          parent.innerHTML = parent.dataset.originalContent; // restore\n          const imgId = img.dataset.originalId;\n          if (imgId) {\n            const imgOriginal = banco.querySelector(`#${imgId}`);\n            if (imgOriginal) {\n              const imgWrapper = imgOriginal.closest('.img-wrapper');\n              if (imgWrapper) {\n                imgWrapper.style.display = \"flex\";\n              }\n            }\n          }\n        }\n      });\n    });\n\n    quadros.forEach(quadro => {\n      quadro.dataset.originalContent = quadro.innerHTML;\n\n      quadro.addEventListener(\"dragover\", (e) => {\n        e.preventDefault();\n        quadro.classList.add(\"drop-hover\");\n      });\n\n      quadro.addEventListener(\"dragleave\", () => {\n        quadro.classList.remove(\"drop-hover\");\n      });\n\n      quadro.addEventListener(\"drop\", (e) => {\n        e.preventDefault();\n        quadro.classList.remove(\"drop-hover\");\n\n        const imgId = e.dataTransfer.getData(\"id\");\n        const img = document.getElementById(imgId);\n\n        // Remove imagem anterior se existir\n        const existing = quadro.querySelector(\"img\");\n        if (existing) {\n          const existingId = existing.dataset.originalId;\n          const existingImg = banco.querySelector(`#${existingId}`);\n          if (existingImg) {\n            const existingWrapper = existingImg.closest('.img-wrapper');\n            if (existingWrapper) {\n              existingWrapper.style.display = \"flex\";\n            }\n          }\n        }\n\n        // Adiciona imagem ocupando todo espaço\n        const novaImg = img.cloneNode(true);\n        novaImg.classList.remove(\"escondido\");\n        novaImg.dataset.originalId = imgId;\n\n        // Esconde a imagem e o nome do banco\n        const imgWrapper = img.closest('.img-wrapper');\n        if (imgWrapper) {\n          imgWrapper.style.display = \"none\";\n        }\n\n        novaImg.addEventListener(\"click\", () => {\n          // Remove a imagem do quadro\n          quadro.innerHTML = quadro.dataset.originalContent;\n\n          // Mostra a imagem e o nome novamente no banco\n          const imgOriginal = banco.querySelector(`#${imgId}`);\n          if (imgOriginal) {\n            const imgWrapper = imgOriginal.closest('.img-wrapper');\n            if (imgWrapper) {\n              imgWrapper.style.display = \"flex\";\n            }\n          }\n        });\n\n        // Injetar imagem, ocultando apenas a palavra vazia\n        quadro.innerHTML = quadro.dataset.originalContent;\n        const span = quadro.querySelector(\"span.palavra\");\n        if (span) span.style.display = \"none\";\n\n        quadro.appendChild(novaImg);\n      });\n    });\n  })();\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/arrastar_soltar.png",
    "tags": [
      "arrastar",
      "jogo",
      "soltar"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-7",
    "title": "Mapa mental",
    "description": "Exemplo de mapa mental",
    "code": "<div id=\"mapa-mental-container\" style=\"border: 2px solid #87ceeb; min-height: 700px; margin-top: 1em; padding: 3em; background-color: #f0f8ff; position: relative; overflow: hidden;\">\n  <div id=\"caixa-central\" class=\"caixa-mapa caixa-principal\" style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #87ceeb; color: #000080; padding: 15px 20px; border-radius: 8px; font-weight: bold; font-size: 1.1em; text-align: center; min-width: 200px; box-shadow: 0 4px 8px rgba(0,0,0,0.2); cursor: pointer; z-index: 10;\">\n    CLASSIFICAÇÃO DAS PALAVRAS<br>QUANTO À SÍLABA TÔNICA\n  </div>\n\n  <div id=\"area-caixas-aluno\"></div>\n\n  <svg id=\"setas-svg\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 5;\"></svg>\n\n  <div style=\"position: absolute; bottom: 10px; left: 10px; z-index: 20;\">\n    <button id=\"btn-adicionar\" style=\"background-color: #2196F3; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; margin-right: 10px; font-size: 0.9em;\">➕ Adicionar Caixa</button>\n    <button id=\"btn-conectar\" style=\"background-color: #4CAF50; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; margin-right: 10px; font-size: 0.9em;\">🔗 Conectar</button>\n    <button id=\"btn-limpar\" style=\"background-color: #f44336; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer; font-size: 0.9em;\">🗑️ Limpar</button>\n  </div>\n\n  <div style=\"position: absolute; top: 10px; right: 10px; background-color: rgba(255,255,255,0.9); padding: 10px; border-radius: 6px; font-size: 0.8em; max-width: 280px; z-index: 20;\">\n    <strong>Como criar seu mapa mental:</strong><br>\n    • Clique em 'Adicionar Caixa' para criar novas caixas<br>\n    • Digite o texto nas caixas (classificações, definições, exemplos)<br>\n    • Arraste as caixas para posicionar onde quiser<br>\n    • Clique em 'Conectar' para ativar o modo de ligação<br>\n    • Clique nas caixas para conectá-las (múltiplas conexões)<br>\n    • Use 'Limpar' para remover todas as conexões\n  </div>\n</div>\n\n<style>\n  .caixa-mapa {\n    user-select: none;\n    transition: transform 0.1s ease, box-shadow 0.2s ease;\n  }\n\n  .caixa-mapa:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3) !important;\n  }\n\n  .caixa-mapa.selecionada {\n    box-shadow: 0 0 0 3px #ff6b6b !important;\n    transform: scale(1.1);\n  }\n\n  .caixa-principal {\n    cursor: pointer !important;\n  }\n\n  .caixa-aluno {\n    cursor: move !important;\n  }\n\n  .caixa-aluno input {\n    font-family: inherit;\n    cursor: text !important;\n  }\n\n  .caixa-aluno input::placeholder {\n    color: rgba(0, 0, 128, 0.6);\n  }\n\n  #btn-conectar.ativo {\n    background-color: #ff6b6b !important;\n    animation: pulse 1s infinite;\n  }\n\n  @keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n    100% { transform: scale(1); }\n  }\n</style>\n\n<script>\n  (function () {\n    const container = document.getElementById('mapa-mental-container');\n    const btnAdicionar = document.getElementById('btn-adicionar');\n    const btnConectar = document.getElementById('btn-conectar');\n    const btnLimpar = document.getElementById('btn-limpar');\n    const svg = document.getElementById('setas-svg');\n    const areaCaixas = document.getElementById('area-caixas-aluno');\n\n    let modoConectar = false;\n    let caixaSelecionada = null;\n    let conexoes = [];\n    let contadorCaixas = 0;\n\n    function criarNovaCaixa() {\n      contadorCaixas++;\n      const novaCaixa = document.createElement('div');\n      novaCaixa.className = 'caixa-mapa caixa-aluno';\n      novaCaixa.id = `caixa-${contadorCaixas}`;\n      novaCaixa.style.cssText = `position: absolute; top: ${200 + contadorCaixas * 50}px; left: ${200 + contadorCaixas * 50}px; background-color: #87ceeb; color: #000080; padding: 12px 16px; border-radius: 8px; font-size: 0.9em; text-align: center; min-width: 120px; min-height: 40px; box-shadow: 0 4px 8px rgba(0,0,0,0.2); cursor: move; z-index: 10; display: flex; align-items: center; justify-content: center;`;\n\n      const input = document.createElement('input');\n      input.type = 'text';\n      input.placeholder = 'Digite aqui...';\n      input.style.cssText = `background: transparent; border: none; color: #000080; font-size: 0.9em; text-align: center; width: 100%; outline: none;`;\n\n      novaCaixa.appendChild(input);\n      areaCaixas.appendChild(novaCaixa);\n\n      adicionarFuncionalidadeArrastar(novaCaixa);\n      input.focus();\n    }\n\n    function getPosicaoCentral(elemento) {\n      const rect = elemento.getBoundingClientRect();\n      const containerRect = container.getBoundingClientRect();\n      return { x: rect.left - containerRect.left + rect.width / 2, y: rect.top - containerRect.top + rect.height / 2 };\n    }\n\n    function desenharSeta(origem, destino) {\n      const linha = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      linha.setAttribute('x1', origem.x);\n      linha.setAttribute('y1', origem.y);\n      linha.setAttribute('x2', destino.x);\n      linha.setAttribute('y2', destino.y);\n      linha.setAttribute('stroke', '#87ceeb');\n      linha.setAttribute('stroke-width', '3');\n      linha.setAttribute('marker-end', 'url(#arrowhead)');\n\n      const defs = svg.querySelector('defs') || svg.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'defs'));\n      if (!svg.querySelector('#arrowhead')) {\n        const marker = document.createElementNS('http://www.w3.org/2000/svg', 'marker');\n        marker.setAttribute('id', 'arrowhead');\n        marker.setAttribute('markerWidth', '10');\n        marker.setAttribute('markerHeight', '7');\n        marker.setAttribute('refX', '9');\n        marker.setAttribute('refY', '3.5');\n        marker.setAttribute('orient', 'auto');\n\n        const polygon = document.createElementNS('http://www.w3.org/2000/svg', 'polygon');\n        polygon.setAttribute('points', '0 0, 10 3.5, 0 7');\n        polygon.setAttribute('fill', '#87ceeb');\n\n        marker.appendChild(polygon);\n        defs.appendChild(marker);\n      }\n\n      svg.appendChild(linha);\n      return linha;\n    }\n\n    function conectarCaixas(caixa1, caixa2) {\n      const pos1 = getPosicaoCentral(caixa1);\n      const pos2 = getPosicaoCentral(caixa2);\n      const seta = desenharSeta(pos1, pos2);\n      conexoes.push({ caixa1: caixa1.id, caixa2: caixa2.id, seta: seta });\n    }\n\n    function limparConexoes() {\n      conexoes.forEach(c => c.seta.remove());\n      conexoes = [];\n    }\n\n    function adicionarFuncionalidadeArrastar(caixa) {\n      let isDragging = false;\n      let initialX, initialY, currentX, currentY, xOffset = 0, yOffset = 0;\n\n      caixa.addEventListener('mousedown', dragStart);\n      document.addEventListener('mousemove', drag);\n      document.addEventListener('mouseup', dragEnd);\n\n      function dragStart(e) {\n        if (e.target.tagName === 'INPUT') return;\n\n        if (modoConectar) {\n          if (!caixaSelecionada) {\n            caixaSelecionada = caixa;\n            caixa.classList.add('selecionada');\n          } else if (caixaSelecionada !== caixa) {\n            conectarCaixas(caixaSelecionada, caixa);\n            caixaSelecionada.classList.remove('selecionada');\n            caixaSelecionada = null;\n          }\n          e.preventDefault();\n          return;\n        }\n\n        initialX = e.clientX - xOffset;\n        initialY = e.clientY - yOffset;\n        isDragging = true;\n        caixa.style.zIndex = '15';\n      }\n\n      function drag(e) {\n        if (!isDragging) return;\n        e.preventDefault();\n        currentX = e.clientX - initialX;\n        currentY = e.clientY - initialY;\n        xOffset = currentX;\n        yOffset = currentY;\n        caixa.style.transform = `translate(${currentX}px, ${currentY}px)`;\n        atualizarSetas();\n      }\n\n      function dragEnd() {\n        isDragging = false;\n        caixa.style.zIndex = '10';\n      }\n    }\n\n    function atualizarSetas() {\n      conexoes.forEach(c => {\n        const caixa1 = document.getElementById(c.caixa1);\n        const caixa2 = document.getElementById(c.caixa2);\n        if (caixa1 && caixa2) {\n          const pos1 = getPosicaoCentral(caixa1);\n          const pos2 = getPosicaoCentral(caixa2);\n          c.seta.setAttribute('x1', pos1.x);\n          c.seta.setAttribute('y1', pos1.y);\n          c.seta.setAttribute('x2', pos2.x);\n          c.seta.setAttribute('y2', pos2.y);\n        }\n      });\n    }\n\n    btnAdicionar.addEventListener('click', criarNovaCaixa);\n\n    const caixaCentral = document.getElementById('caixa-central');\n    caixaCentral.addEventListener('click', () => {\n      if (!modoConectar) return;\n      if (!caixaSelecionada) {\n        caixaSelecionada = caixaCentral;\n        caixaCentral.classList.add('selecionada');\n      } else if (caixaSelecionada !== caixaCentral) {\n        conectarCaixas(caixaSelecionada, caixaCentral);\n        caixaSelecionada.classList.remove('selecionada');\n        caixaSelecionada = null;\n      }\n    });\n\n    btnConectar.addEventListener('click', () => {\n      modoConectar = !modoConectar;\n      if (modoConectar) {\n        btnConectar.classList.add('ativo');\n        btnConectar.textContent = '❌ Cancelar';\n        if (caixaSelecionada) caixaSelecionada.classList.remove('selecionada');\n        caixaSelecionada = null;\n      } else {\n        btnConectar.classList.remove('ativo');\n        btnConectar.textContent = '🔗 Conectar';\n        if (caixaSelecionada) caixaSelecionada.classList.remove('selecionada');\n        caixaSelecionada = null;\n      }\n    });\n\n    btnLimpar.addEventListener('click', () => {\n      limparConexoes();\n      if (caixaSelecionada) caixaSelecionada.classList.remove('selecionada');\n      caixaSelecionada = null;\n      modoConectar = false;\n      btnConectar.classList.remove('ativo');\n      btnConectar.textContent = '🔗 Conectar';\n    });\n\n    window.addEventListener('resize', atualizarSetas);\n  })();\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/mapa_mental.png",
    "tags": [
      "mapa",
      "jogo",
      "mental"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-8",
    "title": "Desenho interativo",
    "description": "Exemplo de quadro para desenho",
    "code": "<div class=\\\"area-desenho-cofrinho\\\" style=\\\"text-align: center; margin: 20px auto; max-width: 800px;\\\">\\n\\n    <!-- Ferramentas de desenho -->\\n    <div class=\\\"ferramentas-desenho\\\"\\n      style=\\\"background-color: #f8f9fa; padding: 15px; border-radius: 10px; margin-bottom: 15px; border: 2px solid #e9ecef;\\\">\\n\\n      <!-- Seletor de cores -->\\n      <div style=\\\"display: inline-block; margin-right: 20px; vertical-align: top;\\\">\\n        <label style=\\\"display: block; font-weight: bold; margin-bottom: 8px; color: #333;\\\">🎨 ESCOLHA A\\n          COR:</label>\\n        <div class=\\\"cores-desenho\\\" style=\\\"display: flex; gap: 8px; flex-wrap: wrap;\\\">\\n          <div class=\\\"cor-opcao ativa\\\" data-cor=\\\"#000000\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #000000; border-radius: 50%; cursor: pointer; border: 3px solid #007bff;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#e74c3c\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #e74c3c; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#3498db\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #3498db; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#2ecc71\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #2ecc71; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#f39c12\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #f39c12; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#9b59b6\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #9b59b6; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#e67e22\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #e67e22; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#1abc9c\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #1abc9c; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#34495e\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #34495e; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"cor-opcao\\\" data-cor=\\\"#f1c40f\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #f1c40f; border-radius: 50%; cursor: pointer; border: 3px solid transparent;\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Tamanho do pincel -->\\n      <div style=\\\"display: inline-block; margin-right: 20px; vertical-align: top;\\\">\\n        <label style=\\\"display: block; font-weight: bold; margin-bottom: 8px; color: #333;\\\">🖌️\\n          TAMANHO:</label>\\n        <div class=\\\"tamanhos-pincel\\\" style=\\\"display: flex; gap: 8px; align-items: center;\\\">\\n          <div class=\\\"tamanho-opcao ativo\\\" data-tamanho=\\\"3\\\"\\n            style=\\\"width: 20px; height: 20px; background-color: #333; border-radius: 50%; cursor: pointer; border: 2px solid #007bff;\\\">\\n          </div>\\n          <div class=\\\"tamanho-opcao\\\" data-tamanho=\\\"6\\\"\\n            style=\\\"width: 25px; height: 25px; background-color: #333; border-radius: 50%; cursor: pointer; border: 2px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"tamanho-opcao\\\" data-tamanho=\\\"10\\\"\\n            style=\\\"width: 30px; height: 30px; background-color: #333; border-radius: 50%; cursor: pointer; border: 2px solid transparent;\\\">\\n          </div>\\n          <div class=\\\"tamanho-opcao\\\" data-tamanho=\\\"15\\\"\\n            style=\\\"width: 35px; height: 35px; background-color: #333; border-radius: 50%; cursor: pointer; border: 2px solid transparent;\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Botões de ação -->\\n      <div style=\\\"display: inline-block; vertical-align: top;\\\">\\n        <label style=\\\"display: block; font-weight: bold; margin-bottom: 8px; color: #333;\\\">🔧\\n          AÇÕES:</label>\\n        <div style=\\\"display: flex; gap: 10px;\\\">\\n          <button id=\\\"botao-borracha-cofrinho\\\"\\n            style=\\\"background-color: #6c757d; color: white; border: none; padding: 8px 12px; border-radius: 5px; cursor: pointer; font-size: 14px;\\\">🧹\\n            BORRACHA</button>\\n          <button id=\\\"botao-limpar-cofrinho\\\"\\n            style=\\\"background-color: #dc3545; color: white; border: none; padding: 8px 12px; border-radius: 5px; cursor: pointer; font-size: 14px;\\\">🗑️\\n            LIMPAR</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Canvas de desenho -->\\n    <div\\n      style=\\\"position: relative; display: inline-block; border: 3px dashed #007bff; border-radius: 10px; background-color: white;\\\">\\n      <canvas id=\\\"canvas-cofrinho\\\" width=\\\"600\\\" height=\\\"400\\\"\\n        style=\\\"display: block; cursor: crosshair; border-radius: 7px;\\\"></canvas>\\n      <div\\n        style=\\\"position: absolute; top: 10px; left: 10px; background-color: rgba(0, 123, 255, 0.1); padding: 5px 10px; border-radius: 15px; font-size: 12px; color: #007bff; font-weight: bold;\\\">\\n        ✏️ Clique e arraste para desenhar\\n      </div>\\n    </div>\\n  </div>\\n  <style>\\n    .area-desenho-cofrinho {\\n      user-select: none;\\n    }\\n\\n    .cor-opcao:hover,\\n    .tamanho-opcao:hover {\\n      transform: scale(1.1);\\n      transition: transform 0.2s ease;\\n    }\\n\\n    .cor-opcao.ativa {\\n      border-color: #007bff !important;\\n      box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);\\n    }\\n\\n    .tamanho-opcao.ativo {\\n      border-color: #007bff !important;\\n      box-shadow: 0 0 8px rgba(0, 123, 255, 0.5);\\n    }\\n\\n    #botao-borracha-cofrinho:hover,\\n    #botao-limpar-cofrinho:hover {\\n      transform: translateY(-2px);\\n      transition: transform 0.2s ease;\\n    }\\n\\n    #botao-borracha-cofrinho.ativo {\\n      background-color: #e67e22 !important;\\n      box-shadow: 0 0 10px rgba(230, 126, 34, 0.5);\\n    }\\n\\n    /* Responsividade */\\n    @media (max-width: 768px) {\\n      .ferramentas-desenho {\\n        padding: 10px;\\n      }\\n\\n      .ferramentas-desenho>div {\\n        display: block !important;\\n        margin-bottom: 15px !important;\\n        margin-right: 0 !important;\\n      }\\n\\n      #canvas-cofrinho {\\n        width: 100% !important;\\n        max-width: 500px;\\n        height: auto;\\n      }\\n    }\\n  </style>\\n  <script>\\n    document.addEventListener('DOMContentLoaded', function () {\\n      console.log('🎨 Inicializando área de desenho do cofrinho');\\n\\n      const canvas = document.getElementById('canvas-cofrinho');\\n      const ctx = canvas.getContext('2d');\\n\\n      // Variáveis de desenho\\n      let isDrawing = false;\\n      let currentColor = '#000000';\\n      let currentSize = 3;\\n      let isEraser = false;\\n\\n      // Configuração inicial do canvas\\n      ctx.lineCap = 'round';\\n      ctx.lineJoin = 'round';\\n\\n      // Seletor de cores\\n      document.querySelectorAll('.cor-opcao').forEach(corElement => {\\n        corElement.addEventListener('click', function () {\\n          // Remove seleção anterior\\n          document.querySelectorAll('.cor-opcao').forEach(el => el.classList.remove('ativa'));\\n\\n          // Adiciona seleção atual\\n          this.classList.add('ativa');\\n          currentColor = this.dataset.cor;\\n          isEraser = false;\\n\\n          // Remove estado ativo da borracha\\n          document.getElementById('botao-borracha-cofrinho').classList.remove('ativo');\\n          document.getElementById('botao-borracha-cofrinho').textContent = '🧹 BORRACHA';\\n          canvas.style.cursor = 'crosshair';\\n\\n          console.log('🎨 Cor selecionada:', currentColor);\\n        });\\n      });\\n\\n      // Seletor de tamanho\\n      document.querySelectorAll('.tamanho-opcao').forEach(tamanhoElement => {\\n        tamanhoElement.addEventListener('click', function () {\\n          // Remove seleção anterior\\n          document.querySelectorAll('.tamanho-opcao').forEach(el => el.classList.remove('ativo'));\\n\\n          // Adiciona seleção atual\\n          this.classList.add('ativo');\\n          currentSize = parseInt(this.dataset.tamanho);\\n\\n          console.log('🖌️ Tamanho selecionado:', currentSize);\\n        });\\n      });\\n\\n      // Botão borracha\\n      document.getElementById('botao-borracha-cofrinho').addEventListener('click', function () {\\n        isEraser = !isEraser;\\n\\n        if (isEraser) {\\n          this.classList.add('ativo');\\n          this.textContent = '🧹 ATIVO';\\n          canvas.style.cursor = 'grab';\\n        } else {\\n          this.classList.remove('ativo');\\n          this.textContent = '🧹 BORRACHA';\\n          canvas.style.cursor = 'crosshair';\\n        }\\n\\n        console.log('🧹 Borracha:', isEraser ? 'ATIVADA' : 'DESATIVADA');\\n      });\\n\\n      // Botão limpar\\n      document.getElementById('botao-limpar-cofrinho').addEventListener('click', function () {\\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\\n        console.log('🗑️ Canvas limpo');\\n      });\\n\\n      // Função para obter coordenadas corretas\\n      function getMousePos(e) {\\n        const rect = canvas.getBoundingClientRect();\\n        const scaleX = canvas.width / rect.width;\\n        const scaleY = canvas.height / rect.height;\\n\\n        return {\\n          x: (e.clientX - rect.left) * scaleX,\\n          y: (e.clientY - rect.top) * scaleY\\n        };\\n      }\\n\\n      function getTouchPos(e) {\\n        const rect = canvas.getBoundingClientRect();\\n        const scaleX = canvas.width / rect.width;\\n        const scaleY = canvas.height / rect.height;\\n\\n        return {\\n          x: (e.touches[0].clientX - rect.left) * scaleX,\\n          y: (e.touches[0].clientY - rect.top) * scaleY\\n        };\\n      }\\n\\n      // Eventos de mouse\\n      canvas.addEventListener('mousedown', function (e) {\\n        isDrawing = true;\\n        const pos = getMousePos(e);\\n\\n        ctx.globalCompositeOperation = isEraser ? 'destination-out' : 'source-over';\\n        ctx.strokeStyle = isEraser ? 'rgba(0,0,0,1)' : currentColor;\\n        ctx.lineWidth = currentSize;\\n\\n        ctx.beginPath();\\n        ctx.moveTo(pos.x, pos.y);\\n      });\\n\\n      canvas.addEventListener('mousemove', function (e) {\\n        if (!isDrawing) return;\\n\\n        const pos = getMousePos(e);\\n        ctx.lineTo(pos.x, pos.y);\\n        ctx.stroke();\\n      });\\n\\n      canvas.addEventListener('mouseup', function () {\\n        isDrawing = false;\\n      });\\n\\n      canvas.addEventListener('mouseout', function () {\\n        isDrawing = false;\\n      });\\n\\n      // Eventos de touch (dispositivos móveis)\\n      canvas.addEventListener('touchstart', function (e) {\\n        e.preventDefault();\\n        isDrawing = true;\\n        const pos = getTouchPos(e);\\n\\n        ctx.globalCompositeOperation = isEraser ? 'destination-out' : 'source-over';\\n        ctx.strokeStyle = isEraser ? 'rgba(0,0,0,1)' : currentColor;\\n        ctx.lineWidth = currentSize;\\n\\n        ctx.beginPath();\\n        ctx.moveTo(pos.x, pos.y);\\n      });\\n\\n      canvas.addEventListener('touchmove', function (e) {\\n        e.preventDefault();\\n        if (!isDrawing) return;\\n\\n        const pos = getTouchPos(e);\\n        ctx.lineTo(pos.x, pos.y);\\n        ctx.stroke();\\n      });\\n\\n      canvas.addEventListener('touchend', function (e) {\\n        e.preventDefault();\\n        isDrawing = false;\\n      });\\n\\n      console.log('✅ Área de desenho do cofrinho configurada com sucesso');\\n    });\\n  </script>",
    "category_id": "games",
    "thumbnail_url": "images/desenho_interativo.png",
    "tags": [
      "desenho"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-9",
    "title": "Desenho interativo em imagem",
    "description": "Exemplo de desenho em imagem",
    "code": "<div id=\"map-container\" style=\"position: relative; width: 100%; max-width: 500px; margin: auto;\">\n  <img id=\"map-image\" src=\"resources/image/page_2_img_65_347.jpeg\" alt=\"Mapa do bairro Bem Viver\" style=\"width: 100%; display: block;\">\n  <canvas id=\"drawing-canvas\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; touch-action: none;\"></canvas>\n</div>\n<div style=\"text-align: center; margin-top: 10px;\">\n  <button id=\"pencil-btn\" style=\"padding: 8px 12px; font-size: 16px;\">✏️</button>\n  <button id=\"eraser-btn\" style=\"padding: 8px 12px; font-size: 16px;\">🧽</button>\n  <button id=\"clear-btn\" style=\"padding: 8px 12px; font-size: 14px;\">Limpar</button>\n</div>\n\n<script>\n  // Drawing Canvas Logic\n  document.addEventListener('DOMContentLoaded', () => {\n    const canvas = document.getElementById('drawing-canvas');\n    const ctx = canvas.getContext('2d');\n    const mapContainer = document.getElementById('map-container');\n    const mapImage = document.getElementById('map-image');\n\n    // Ajusta o canvas para o tamanho visível do container (inclui quando a imagem terminar de carregar)\n    function resizeCanvas() {\n      canvas.width = mapContainer.clientWidth;\n      canvas.height = mapContainer.clientHeight;\n    }\n\n    if (mapImage.complete) {\n      // Caso a imagem já esteja em cache\n      resizeCanvas();\n    } else {\n      mapImage.addEventListener('load', resizeCanvas, { once: true });\n    }\n    window.addEventListener('resize', resizeCanvas);\n\n    let isDrawing = false;\n    let lastX = 0;\n    let lastY = 0;\n    let tool = 'pencil'; // 'pencil' ou 'eraser'\n\n    ctx.strokeStyle = '#E53935'; // Cor vermelha para o traçado\n    ctx.lineWidth = 4;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n\n    function getMousePos(canvasDom, mouseEvent) {\n      const rect = canvasDom.getBoundingClientRect();\n      return {\n        x: mouseEvent.clientX - rect.left,\n        y: mouseEvent.clientY - rect.top\n      };\n    }\n\n    function draw(e) {\n      if (!isDrawing) return;\n      const pos = getMousePos(canvas, e);\n      ctx.beginPath();\n      ctx.moveTo(lastX, lastY);\n      ctx.lineTo(pos.x, pos.y);\n      ctx.stroke();\n      [lastX, lastY] = [pos.x, pos.y];\n    }\n\n    canvas.addEventListener('mousedown', (e) => {\n      isDrawing = true;\n      const pos = getMousePos(canvas, e);\n      [lastX, lastY] = [pos.x, pos.y];\n\n      if (tool === 'eraser') {\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.lineWidth = 15;\n      } else {\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.strokeStyle = '#E53935';\n        ctx.lineWidth = 4;\n      }\n    });\n\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', () => isDrawing = false);\n    canvas.addEventListener('mouseout', () => isDrawing = false);\n\n    // Touch events (tradução para eventos de mouse)\n    canvas.addEventListener('touchstart', (e) => {\n      e.preventDefault();\n      const touch = e.touches[0];\n      const mouseEvent = new MouseEvent('mousedown', { clientX: touch.clientX, clientY: touch.clientY });\n      canvas.dispatchEvent(mouseEvent);\n    }, { passive: false });\n\n    canvas.addEventListener('touchmove', (e) => {\n      e.preventDefault();\n      const touch = e.touches[0];\n      const mouseEvent = new MouseEvent('mousemove', { clientX: touch.clientX, clientY: touch.clientY });\n      canvas.dispatchEvent(mouseEvent);\n    }, { passive: false });\n\n    canvas.addEventListener('touchend', (e) => {\n      e.preventDefault();\n      const mouseEvent = new MouseEvent('mouseup', {});\n      canvas.dispatchEvent(mouseEvent);\n    }, { passive: false });\n\n    document.getElementById('pencil-btn').addEventListener('click', () => { tool = 'pencil'; });\n    document.getElementById('eraser-btn').addEventListener('click', () => { tool = 'eraser'; });\n    document.getElementById('clear-btn').addEventListener('click', () => { ctx.clearRect(0, 0, canvas.width, canvas.height); });\n  });\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/desenho_imagem.png",
    "tags": [
      "desenho",
      "imagem"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-10",
    "title": "Contando quantidades",
    "description": "Exemplo de contagem em Matemática",
    "code": "<div class=\"counting-activity\" style=\"text-align: center; margin: 20px auto; max-width: 600px;\">\n  <h4 style=\"color: #000;\">Vamos contar juntos!</h4>\n  <p>Clique no botão para revelar a contagem das últimas peças do quebra-cabeça.</p>\n  <div id=\"number-line-container\" class=\"number-line\" style=\"display: flex; justify-content: center; flex-wrap: wrap; gap: 8px; min-height: 50px; margin-bottom: 20px;\"></div>\n  <button id=\"start-count-btn\" onclick=\"startCounting()\" style=\"background-color: #007bff; color: white; border: none; padding: 10px 18px; border-radius: 6px; cursor: pointer; font-size: 16px;\">Começar a Contar</button>\n</div>\n\n<style>\n  .number-item {\n    background-color: #f1f1f1;\n    padding: 10px 14px;\n    border-radius: 6px;\n    font-weight: bold;\n    color: #333;\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n    opacity: 0;\n    transform: translateY(20px);\n    transition: all 0.4s ease;\n  }\n  .plus-one {\n    color: #28a745;\n    font-weight: bold;\n    opacity: 0;\n    transform: translateY(10px);\n    transition: all 0.3s ease;\n  }\n  #start-count-btn:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n</style>\n\n<script>\n  const numbers = [990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];\n  const container = document.getElementById('number-line-container');\n  const startBtn = document.getElementById('start-count-btn');\n  let countIndex = 0;\n\n  function startCounting() {\n    startBtn.disabled = true;\n    container.innerHTML = '';\n    countIndex = 0;\n\n    const interval = setInterval(() => {\n      if (countIndex < numbers.length) {\n        const numberEl = document.createElement('div');\n        numberEl.className = 'number-item';\n        numberEl.textContent = numbers[countIndex];\n        container.appendChild(numberEl);\n\n        if (countIndex < numbers.length - 1) {\n          const plusEl = document.createElement('div');\n          plusEl.className = 'plus-one';\n          plusEl.textContent = '+ 1';\n          container.appendChild(plusEl);\n          setTimeout(() => {\n            plusEl.style.opacity = '1';\n            plusEl.style.transform = 'translateY(0)';\n          }, 200);\n        }\n\n        setTimeout(() => {\n          numberEl.style.opacity = '1';\n          numberEl.style.transform = 'translateY(0)';\n        }, 50);\n\n        countIndex++;\n      } else {\n        clearInterval(interval);\n        startBtn.disabled = false;\n        startBtn.textContent = 'Contar Novamente';\n      }\n    }, 600);\n  }\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/contar.png",
    "tags": [
      "matematica",
      "contar"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-11",
    "title": "Selecionar Reta numérica",
    "description": "Exemplo de reta numérica selecionável em Matemática",
    "code": "<div class=\"interactive-container\" style=\"border-radius: 10px; padding: 1.5em; margin: 1.5em 0; background-color: #f9f9f9;\">\n  <p class=\"enunciadoNumero\" style=\"font-size: 1em; text-align: center;\">\n    <span class=\"numeracao\">3.</span> Observe a reta numérica a seguir. Clique de <b style=\"color: red;\">vermelho</b> no menor número e de <b style=\"color: green;\">verde</b> no maior número.\n  </p>\n\n  <div style=\"text-align: center; margin-bottom: 10px;\">\n    <span>Cor selecionada: </span>\n    <button id=\"color-red\" style=\"background-color: red; color:white; border: 2px solid black; border-radius: 6px; padding: 5px 10px; cursor: pointer;\">Vermelho</button>\n    <button id=\"color-green\" style=\"background-color: green; color:white; border: 2px solid transparent; border-radius: 6px; padding: 5px 10px; cursor: pointer;\">Verde</button>\n    <button id=\"clear-colors\" style=\"background-color: #6c757d; color:white; border: none; border-radius: 6px; padding: 5px 10px; cursor: pointer; margin-left: 10px;\">🧽 Limpar</button>\n  </div>\n\n  <div class=\"number-line-interactive\" id=\"interactive-number-line\" style=\"display: flex; justify-content: center; gap: 12px; flex-wrap: wrap;\">\n    <span class=\"number-line-item\" data-value=\"1148\">1148</span>\n    <span class=\"number-line-item\" data-value=\"1149\">1149</span>\n    <span class=\"number-line-item\" data-value=\"1150\">1150</span>\n    <span class=\"number-line-item\" data-value=\"1151\">1151</span>\n    <span class=\"number-line-item\" data-value=\"1152\">1152</span>\n    <span class=\"number-line-item\" data-value=\"1153\">1153</span>\n    <span class=\"number-line-item\" data-value=\"1154\">1154</span>\n    <span class=\"number-line-item\" data-value=\"1155\">1155</span>\n  </div>\n\n  <p id=\"feedback-reta\" style=\"text-align: center; font-weight: bold; margin-top: 15px;\"></p>\n</div>\n\n<style>\n  .number-line-item {\n    display: inline-block;\n    padding: 10px 14px;\n    border: 2px solid transparent;\n    border-radius: 8px;\n    background-color: white;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    cursor: pointer;\n    transition: all 0.3s ease;\n  }\n  .number-line-item:hover {\n    transform: scale(1.05);\n    background-color: #f1f1f1;\n  }\n</style>\n\n<script>\n  let selectedColor = 'red';\n  const redBtn = document.getElementById('color-red');\n  const greenBtn = document.getElementById('color-green');\n  const clearBtn = document.getElementById('clear-colors');\n  const numberItems = document.querySelectorAll('.number-line-item');\n\n  redBtn.addEventListener('click', () => {\n    selectedColor = 'red';\n    redBtn.style.borderColor = 'black';\n    greenBtn.style.borderColor = 'transparent';\n  });\n\n  greenBtn.addEventListener('click', () => {\n    selectedColor = 'green';\n    greenBtn.style.borderColor = 'black';\n    redBtn.style.borderColor = 'transparent';\n  });\n\n  clearBtn.addEventListener('click', () => {\n    numberItems.forEach(item => {\n      item.style.borderColor = 'transparent';\n      item.style.color = '';\n      item.style.backgroundColor = '';\n    });\n    const feedback = document.getElementById('feedback-reta');\n    feedback.textContent = '';\n  });\n\n  numberItems.forEach(item => {\n    item.addEventListener('click', () => {\n      item.style.borderColor = selectedColor;\n      checkRetaNumerica();\n    });\n  });\n\n  function checkRetaNumerica() {\n    const menor = document.querySelector('[data-value=\"1148\"]');\n    const maior = document.querySelector('[data-value=\"1155\"]');\n    const feedback = document.getElementById('feedback-reta');\n\n    if (menor.style.borderColor === 'red' && maior.style.borderColor === 'green') {\n      feedback.textContent = 'Parabéns, você identificou corretamente!';\n      feedback.style.color = 'green';\n    }\n  }\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/reta_numerica.png",
    "tags": [
      "matematica",
      "reta",
      "numerica"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-12",
    "title": "Arrastar e soltar com desenhar em uma imagem",
    "description": "Exemplo arrastar e soltar com desenho",
    "code": "<div class=\"map-activity-container\" style=\"border-radius: 10px; padding: 1.5em; margin: 1.5em 0;\">\n  <p class=\"enunciadoNumero\"><span class=\"numeracao\">3.</span> Observe o mapa das ruas do bairro onde Lucas mora.</p>\n\n  <div class=\"map-wrapper\" style=\"position: relative; width: 100%; max-width: 500px; margin: 1em auto; border: 2px solid #ccc;\">\n    <img id=\"map-img\" src=\"resources/image/page_19_img_123_90.jpeg\" alt=\"Mapa do bairro de Lucas\" style=\"width: 100%; display: block;\" />\n    <p class=\"textoCredito\" style=\"font-size: 12px; color: #555; margin: 6px 0;\">Алексей Шпадарук/stock.adobe.com</p>\n    <canvas id=\"drawing-canvas-mapa\" style=\"position: absolute; top: 0; left: 0; cursor: crosshair; touch-action: none;\"></canvas>\n\n    <div id=\"drop-escola\" class=\"drop-zone\" data-correto=\"escola\" style=\"position: absolute; width: 23%; height: 23%; background-color: rgba(0, 123, 255, 0.2); border: 2px dashed #007bff; transition: background-color 0.3s; top: 0%; left: 77%;\"></div>\n    <div id=\"drop-prefeitura\" class=\"drop-zone\" data-correto=\"prefeitura\" style=\"position: absolute; width: 23%; height: 23%; background-color: rgba(0, 123, 255, 0.2); border: 2px dashed #007bff; transition: background-color 0.3s; top: 0%; left: 51%;\"></div>\n    <div id=\"drop-parque\" class=\"drop-zone\" data-correto=\"parque\" style=\"position: absolute; width: 23%; height: 23%; background-color: rgba(0, 123, 255, 0.2); border: 2px dashed #007bff; transition: background-color 0.3s; top: 52%; left: 51%;\"></div>\n  </div>\n\n  <div class=\"drawing-controls\" style=\"text-align:center; margin-bottom: 12px;\">\n    <b>Ferramentas de Trajeto:</b><br />\n    <button id=\"pencil-btn-map\" style=\"margin: 6px;\">✏️ Traçar</button>\n    <button id=\"eraser-btn-map\" style=\"margin: 6px;\">🧽 Apagar</button>\n    <button id=\"clear-btn-map\" style=\"margin: 6px;\">🗑️ Limpar Tudo</button>\n  </div>\n\n  <div class=\"figure-bank\" style=\"text-align: center; margin-top: 20px; padding: 10px; background-color: #e9ecef; border-radius: 8px;\">\n    <b>Arraste os locais para o mapa:</b><br />\n    <img id=\"escola\" src=\"resources/image/page_19_img_209_670.jpeg\" class=\"draggable-figure\" draggable=\"true\" alt=\"Escola\" style=\"width: 80px; height: auto; cursor: grab; margin: 0 10px; transition: transform 0.2s, border 0.2s; border: 2px solid transparent; border-radius: 8px; position: relative;\" />\n    <img id=\"parque\" src=\"resources/image/page_19_img_276_668.jpeg\" class=\"draggable-figure\" draggable=\"true\" alt=\"Parque\" style=\"width: 80px; height: auto; cursor: grab; margin: 0 10px; transition: transform 0.2s, border 0.2s; border: 2px solid transparent; border-radius: 8px; position: relative;\" />\n    <img id=\"prefeitura\" src=\"resources/image/page_19_img_342_667.jpeg\" class=\"draggable-figure\" draggable=\"true\" alt=\"Prefeitura\" style=\"width: 80px; height: auto; cursor: grab; margin: 0 10px; transition: transform 0.2s, border 0.2s; border: 2px solid transparent; border-radius: 8px; position: relative;\" />\n  </div>\n</div>\n\n<style>\n  .drop-zone.hover { background-color: rgba(0,123,255,0.4) !important; }\n  .drop-zone.filled { background-color: rgba(40,167,69,0.3) !important; border-style: solid !important; border-color: #28a745 !important; }\n  .draggable-figure:hover { transform: scale(1.05); border-color: #007bff; }\n  .draggable-figure:active { cursor: grabbing; transform: scale(1.1); }\n  .drop-zone .draggable-figure { cursor: pointer; }\n  .drop-zone .draggable-figure:hover::after { content: \"🔄 Clique para voltar\"; position: absolute; top: -30px; left: 50%; transform: translateX(-50%); background-color: rgba(0,0,0,0.8); color: #fff; padding: 4px 8px; border-radius: 4px; font-size: 11px; white-space: nowrap; z-index: 1000; pointer-events: none; }\n</style>\n\n<script>\n  document.addEventListener('DOMContentLoaded', () => {\n    // Canvas de desenho\n    const canvas = document.getElementById('drawing-canvas-mapa');\n    const ctx = canvas.getContext('2d');\n    const img = document.getElementById('map-img');\n    const pencilBtn = document.getElementById('pencil-btn-map');\n    const eraserBtn = document.getElementById('eraser-btn-map');\n    const clearBtn = document.getElementById('clear-btn-map');\n\n    function resizeCanvas() {\n      canvas.width = img.clientWidth;\n      canvas.height = img.clientHeight;\n      canvas.style.width = img.clientWidth + 'px';\n      canvas.style.height = img.clientHeight + 'px';\n    }\n    if (img.complete) { resizeCanvas(); }\n    img.addEventListener('load', resizeCanvas, { once: true });\n    window.addEventListener('resize', resizeCanvas);\n\n    let isDrawing = false;\n    let tool = 'pencil';\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n\n    function getPos(e) {\n      const rect = canvas.getBoundingClientRect();\n      const clientX = (e.clientX !== undefined) ? e.clientX : (e.touches && e.touches[0].clientX);\n      const clientY = (e.clientY !== undefined) ? e.clientY : (e.touches && e.touches[0].clientY);\n      return { x: clientX - rect.left, y: clientY - rect.top };\n    }\n    function start(e) {\n      e.preventDefault();\n      isDrawing = true;\n      const { x, y } = getPos(e);\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      if (tool === 'pencil') { ctx.globalCompositeOperation = 'source-over'; ctx.strokeStyle = '#E53935'; ctx.lineWidth = 5; }\n      else { ctx.globalCompositeOperation = 'destination-out'; ctx.lineWidth = 20; }\n    }\n    function draw(e) {\n      if (!isDrawing) return;\n      e.preventDefault();\n      const { x, y } = getPos(e);\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n    function stop(e) { e.preventDefault(); isDrawing = false; }\n\n    ['mousedown','touchstart'].forEach(evt => canvas.addEventListener(evt, start, { passive: false }));\n    ['mousemove','touchmove'].forEach(evt => canvas.addEventListener(evt, draw, { passive: false }));\n    ['mouseup','mouseout','touchend'].forEach(evt => canvas.addEventListener(evt, stop, { passive: false }));\n\n    pencilBtn.addEventListener('click', () => tool = 'pencil');\n    eraserBtn.addEventListener('click', () => tool = 'eraser');\n    clearBtn.addEventListener('click', () => ctx.clearRect(0, 0, canvas.width, canvas.height));\n\n    // Drag and Drop\n    const draggables = document.querySelectorAll('.draggable-figure');\n    const dropZones = document.querySelectorAll('.drop-zone');\n    const figureBank = document.querySelector('.figure-bank');\n\n    const originalPositions = new Map();\n    draggables.forEach(draggable => {\n      originalPositions.set(draggable.id, figureBank);\n      draggable.addEventListener('dragstart', e => { e.dataTransfer.setData('text/plain', e.target.id); });\n      draggable.addEventListener('click', e => { if (draggable.parentElement !== figureBank) { returnToOrigin(draggable); } });\n    });\n\n    dropZones.forEach(zone => {\n      zone.addEventListener('dragover', e => { e.preventDefault(); zone.classList.add('hover'); });\n      zone.addEventListener('dragleave', () => zone.classList.remove('hover'));\n      zone.addEventListener('drop', e => {\n        e.preventDefault();\n        zone.classList.remove('hover');\n        const id = e.dataTransfer.getData('text');\n        const draggableElement = document.getElementById(id);\n\n        if (zone.children.length > 0) {\n          const existingElement = zone.children[0];\n          if (existingElement.classList.contains('draggable-figure')) { returnToOrigin(existingElement); }\n        }\n        zone.innerHTML = '';\n        zone.appendChild(draggableElement);\n        draggableElement.style.width = '100%';\n        draggableElement.style.height = '100%';\n        draggableElement.style.cursor = 'pointer';\n        zone.classList.add('filled');\n      });\n    });\n\n    function returnToOrigin(element) {\n      const originalParent = originalPositions.get(element.id);\n      if (originalParent) {\n        originalParent.appendChild(element);\n        element.style.width = '';\n        element.style.height = '';\n        element.style.cursor = 'grab';\n        document.querySelectorAll('.drop-zone').forEach(zone => {\n          if (!zone.children.length || !zone.querySelector('.draggable-figure')) { zone.classList.remove('filled'); }\n        });\n      }\n    }\n  });\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/arrastar_soltar_desenho.png",
    "tags": [
      "arrastar",
      "soltar",
      "desenho"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-13",
    "title": "Arrastar e soltar preenchendo frases",
    "description": "Exemplo arrastar e soltar com palavras",
    "code": "<div id=\"atividade-arrastar-p74\">\\n  <div class=\"banco-palavras-p74\">\\n    <div class=\"palavra-arrastavel\" draggable=\"true\" style=\"background-color: #d0d1e8; border: 2px solid #7386bf; color: #000;\">elefante</div>\\n    <div class=\"palavra-arrastavel\" draggable=\"true\" style=\"background-color: #fadfeb; border: 2px solid #f26fb3; color: #000;\">armário</div>\\n    <div class=\"palavra-arrastavel\" draggable=\"true\" style=\"background-color: #dbede0; border: 2px solid #82d3ab; color: #000;\">tímido</div>\\n    <div class=\"palavra-arrastavel\" draggable=\"true\" style=\"background-color: #f9e7d0; border: 2px solid #f5d9ac; color: #000;\">leão</div>\\n    <div class=\"palavra-arrastavel\" draggable=\"true\" style=\"background-color: #fcd5c4; border: 2px solid #f36569; color: #000;\">círculo</div>\\n    <div class=\"palavra-arrastavel\" draggable=\"true\" style=\"background-color: #c5daeb; border: 2px solid #509ec7; color: #000;\">cobertor</div>\\n  </div>\\n\\n  <div class=\"frases-completar\">\\n    <p class=\"alternativaLetra\"><b>a)</b> O <span class=\"lacuna-arrastar\" data-resposta=\"leão\"></span> rugiu bem alto. (oxítona)</p>\\n    <p class=\"alternativaLetra\"><b>b)</b> Ele se escondeu atrás do <span class=\"lacuna-arrastar\" data-resposta=\"armário\"></span>. (paroxítona)</p>\\n    <p class=\"alternativaLetra\"><b>c)</b> O menino ficou <span class=\"lacuna-arrastar\" data-resposta=\"tímido\"></span> na apresentação. (proparoxítona)</p>\\n    <p class=\"alternativaLetra\"><b>d)</b> Havia um <span class=\"lacuna-arrastar\" data-resposta=\"círculo\"></span> grande no desenho. (proparoxítona)</p>\\n    <p class=\"alternativaLetra\"><b>e)</b> Eu me cobri com o <span class=\"lacuna-arrastar\" data-resposta=\"cobertor\"></span>. (oxítona)</p>\\n    <p class=\"alternativaLetra\"><b>f)</b> O <span class=\"lacuna-arrastar\" data-resposta=\"elefante\"></span> caminhava devagar. (paroxítona)</p>\\n  </div>\\n</div>\\n\\n<style>\\n  #atividade-arrastar-p74 .banco-palavras-p74 {\\n    display: flex; justify-content: center; gap: 10px; flex-wrap: wrap;\\n    background-color: #fffbe6; border: 2px dashed #f0ad4e; padding: 15px;\\n    border-radius: 8px; margin-bottom: 2em;\\n  }\\n  #atividade-arrastar-p74 .palavra-arrastavel {\\n    padding: 8px 15px; background-color: #f0ad4e; color: white; border-radius: 20px;\\n    cursor: grab; user-select: none;\\n  }\\n  #atividade-arrastar-p74 .palavra-arrastavel.arrastando { opacity: 0.5; }\\n  #atividade-arrastar-p74 .frases-completar { line-height: 2.5em; }\\n  #atividade-arrastar-p74 .lacuna-arrastar {\\n    display: inline-block; width: 130px; height: 35px; border: 2px dashed #ccc;\\n    background-color: #f9f9f9; vertical-align: middle; text-align: end; border-radius: 8px;\\n    transition: background-color 0.3s;\\n  }\\n  #atividade-arrastar-p74 .lacuna-arrastar.hover { background-color: #e9ecef; }\\n  #atividade-arrastar-p74 .lacuna-arrastar.correto {\\n    background-color: #d4edda; border-color: #28a745; color: #155724; font-weight: bold;\\n  }\\n  #atividade-arrastar-p74 .lacuna-arrastar.preenchida {\\n    background-color: #fff3cd; border-color: #ffc107; color: #856404; font-weight: bold; cursor: pointer;\\n  }\\n  #atividade-arrastar-p74 .lacuna-arrastar.preenchida:hover { background-color: #ffeaa7; }\\n</style>\\n\\n<script>\\n(function () {\\n  const draggables = document.querySelectorAll('#atividade-arrastar-p74 .palavra-arrastavel');\\n  const dropZones = document.querySelectorAll('#atividade-arrastar-p74 .lacuna-arrastar');\\n\\n  function devolverPalavraAoBanco(palavra) {\\n    const palavraExistente = Array.from(draggables).find(d => d.textContent === palavra);\\n    if (palavraExistente) { palavraExistente.style.display = 'inline-block'; }\\n  }\\n\\n  function verificarResposta(zona, palavra) {\\n    if (zona.dataset.resposta.toLowerCase() === palavra.toLowerCase()) {\\n      zona.classList.remove('preenchida');\\n      zona.classList.add('correto');\\n    } else {\\n      zona.classList.remove('correto');\\n      zona.classList.add('preenchida');\\n    }\\n  }\\n\\n  draggables.forEach(draggable => {\\n    draggable.addEventListener('dragstart', e => {\\n      e.dataTransfer.setData('text/plain', draggable.textContent);\\n      draggable.classList.add('arrastando');\\n    });\\n    draggable.addEventListener('dragend', () => draggable.classList.remove('arrastando'));\\n  });\\n\\n  dropZones.forEach(zone => {\\n    zone.addEventListener('dragover', e => { e.preventDefault(); zone.classList.add('hover'); });\\n    zone.addEventListener('dragleave', () => zone.classList.remove('hover'));\\n    zone.addEventListener('drop', e => {\\n      e.preventDefault(); zone.classList.remove('hover');\\n      const droppedWord = e.dataTransfer.getData('text/plain');\\n      if (zone.textContent.trim() !== '') { devolverPalavraAoBanco(zone.textContent.trim()); }\\n      zone.textContent = droppedWord;\\n      const originalDraggable = Array.from(draggables).find(d => d.textContent === droppedWord);\\n      if (originalDraggable) originalDraggable.style.display = 'none';\\n      verificarResposta(zone, droppedWord);\\n    });\\n    zone.addEventListener('click', () => {\\n      if (zone.textContent.trim() !== '') {\\n        const palavra = zone.textContent.trim();\\n        devolverPalavraAoBanco(palavra);\\n        zone.textContent = '';\\n        zone.classList.remove('correto', 'preenchida');\\n      }\\n    });\\n  });\\n})();\\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/arrastar_frases.png",
    "tags": [
      "arrastar",
      "soltar",
      "portugues"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  },
  {
    "id": "snippet-14",
    "title": "Cruzadinha",
    "description": "Exemplo de cruzadinha",
    "code": "<div class=\"cruzadinha-pag28\">\\n  <div class=\"grid-cruzadinha\">\\n    <!-- LINHA 0 -->\\n    <div></div><input maxlength=\"1\" />\\n    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\\n\\n    <!-- LINHA 1 -->\\n    <input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" />\\n    <div></div><div></div><div></div><div></div><div></div><div></div><div></div>\\n\\n    <!-- LINHA 2 -->\\n    <div></div><input maxlength=\"1\" /><input maxlength=\"1\" />\\n    <div></div><div></div><div></div><div></div><div></div><div></div><div></div>\\n\\n    <!-- LINHA 3 -->\\n    <div></div><input maxlength=\"1\" />\\n    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\\n\\n    <!-- LINHA 4 -->\\n    <div></div><input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" />\\n    <div></div><div></div><div></div><div></div><div></div>\\n\\n    <!-- LINHA 5 -->\\n    <input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" />\\n    <input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" /><input maxlength=\"1\" />\\n  </div>\\n</div>\\n\\n<style>\\n  .cruzadinha-pag28 {\\n    max-width: 700px; margin: 40px auto; font-family: Arial, sans-serif; text-align: center;\\n  }\\n  .grid-cruzadinha {\\n    display: grid; grid-template-columns: repeat(10, 40px); grid-auto-rows: 40px;\\n    gap: 2px; justify-content: center; margin-bottom: 20px;\\n  }\\n  .grid-cruzadinha input {\\n    width: 40px; height: 40px; border: 2px solid #007bff; text-transform: uppercase;\\n    text-align: center; font-size: 20px; outline: none;\\n  }\\n  .grid-cruzadinha div {\\n    width: 40px; height: 40px;\\n  }\\n</style>\\n\\n<script>\\n  document.querySelectorAll('.grid-cruzadinha input').forEach(input => {\\n    input.addEventListener('input', () => {\\n      input.value = input.value.toUpperCase().replace(/[^A-ZÁÉÍÓÚÜÇ]/g, '');\\n    });\\n  });\\n</script>",
    "category_id": "games",
    "thumbnail_url": "images/cruzadinha.png",
    "tags": [
      "cruzadinha"
    ],
    "created_at": "2025-01-04T00:00:00Z",
    "updated_at": "2025-01-04T00:00:00Z"
  }
]

